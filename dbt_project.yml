
# Name your package! Package names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: 'kdbt_template'
version: '0.0.1'

# This setting configures which "profile" dbt uses for this project. Profiles contain
# database connection information, and should be configured in the  ~/.dbt/profiles.yml file
profile: 'revzilla'

# These configurations specify where dbt should look for different types of files.
# The `source-paths` config, for example, states that source models can be found
# in the "models/" directory. You probably won't need to change these!
source-paths: ["screens","audits","staging_quality","production","partials"]
analysis-paths: ["analysis"]
test-paths: ["tests"]
data-paths: ["data"]
macro-paths: ["macros"]

target-path: "target"  # directory which will store compiled SQL files
clean-targets:         # directories to be removed by `dbt clean`
    - "target"
    - "dbt_modules"

quoting:
  identifier: false
  schema: false

on-run-end:
  - >
    {% for schema_suffix in ["QUALITY", "STAGING_QUALITY", "GENERAL"] %}
      {% for snowflake_role in ["GENERAL_USER", "DEVELOPER"] %}
      GRANT USAGE ON SCHEMA {% if this.database == var('production_database') %} QUALITY {% else %} {{this.schema+'_'+schema_suffix}} {% endif %} TO ROLE {{snowflake_role}};
      GRANT SELECT ON ALL TABLES IN SCHEMA {% if this.database == var('production_database') %} QUALITY {% else %} {{this.schema+'_'+schema_suffix}} {% endif %} TO ROLE {{snowflake_role}};
      GRANT SELECT ON ALL VIEWS IN SCHEMA {% if this.database == var('production_database') %} QUALITY {% else %} {{this.schema+'_'+schema_suffix}} {% endif %} TO ROLE {{snowflake_role}};
      {% endfor %}
    {% endfor %}

models:
  revzilla:

  vars:
    release: "Harvey Mushman"
    app_version: 0.0.11
    dbt_version: 0.10.2
    production_database: 'DW2'

    partials:
      materialized: ephemeral

    audits:
      materialized: incremental
      sql_where: "TRUE"         ## This is legacy dbt that tells the framework to use the logic in the model.

    screens:
      materialized: incremental
      sql_where: "TRUE"
